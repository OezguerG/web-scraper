# 🎬 Movie Data Analysis & Scraping Project

Dieses Projekt kombiniert **Web Scraping**, **Datenaufbereitung** und **Datenanalyse**, um Informationen zu Film-Budgets, Einnahmen und Genres zu sammeln, zu bereinigen und zu visualisieren.  

Es eignet sich als Showcase für Python-Kenntnisse in den Bereichen **Datenpipelines, Scrapy, Pandas, Visualisierung und Automatisierung**.

---

## 📂 Projektstruktur

AbgabeDaPy/  
├── main.py                – Einstiegspunkt ins Projekt  
├── clean.py               – Datenbereinigung  
├── processor.py           – Verarbeitung und Analyse  
├── visualize.py           – Erstellung von Diagrammen  
├── run_spider.py          – Steuerung des Scrapy-Spiders  
├── scrapy_spider.py       – Scrapy Spider zum Sammeln der Daten  
├── project.ipynb          – Jupyter Notebook mit Analysen  
├── analyze.txt            – Textuelle Analyse/Notizen  
├── data_paths.env         – Umgebungsvariablen für Datenpfade  

**Datenordner (`data/`):**  
- movie_budgets_and_genres.csv  
- movie_grossings.csv  
- movie_links.json  

**Output (`output/`):**  
- movie_rankings.csv  
- movie_rankings_cleaned.csv  
- test.csv  
- visual/ (Diagramme, z. B. `1_genre_cluster.png`, `2_budget_grossing_ratio.png`, …)  

**Scraper (`scraping/`):**  
- scraper_data.py  
- __init__.py  

---

## 🚀 Installation

1. Repository klonen:  
   git clone <repo-url>  
   cd AbgabeDaPy  

2. Virtuelle Umgebung erstellen & aktivieren:  
   python -m venv venv  
   venv\Scripts\activate      # Windows  
   source venv/bin/activate   # Linux/Mac  

3. Abhängigkeiten installieren:  
   pip install -r requirements.txt  

   Falls keine `requirements.txt` vorhanden ist:  
   pip install pandas matplotlib scrapy jupyter  

---

## 🛠️ Nutzung

**Daten scrapen:**  
python run_spider.py  

**Daten bereinigen:**  
python clean.py  

**Analyse & Verarbeitung:**  
python processor.py  

**Visualisierung:**  
python visualize.py  
➡️ Diagramme werden in `output/visual/` abgelegt.  

**Jupyter Notebook öffnen:**  
jupyter notebook project.ipynb  

---

## 📊 Ergebnisse

- CSV-Dateien mit Rankings und Berechnungen (`output/`)  
- Mehrere Visualisierungen, z. B.:  
  - Verteilung der Genres  
  - Verhältnis Budget/Einnahmen  
  - Vergleich der lukrativsten Genres  
  - Entwicklung über die Jahre  

---

## 💡 Technologien

- **Python 3**  
- **Scrapy** für Web Scraping  
- **Pandas** für Datenanalyse  
- **Matplotlib** für Visualisierung  
- **Jupyter Notebook** für Exploration  

---

## 👤 Autor

Dieses Projekt wurde im Rahmen einer Abgabe erstellt und demonstriert Fähigkeiten in **Datenanalyse, Scraping und Python-Programmierung**.
